from collections import defaultdict
        graph = defaultdict(list)
        for a, b in prerequisites:
            graph[b].append(a)  # b â†’ a means b must be done before a

        visited = [0] * numCourses  # 0 = unvisited, 1 = visiting, 2 = visited

        def dfs(course):
            if visited[course] == 1:
                return False  # cycle
            if visited[course] == 2:
                return True

            visited[course] = 1  # mark as visiting
            for neighbor in graph[course]:
                if not dfs(neighbor):
                    return False
            visited[course] = 2  # mark as visited
            return True

        for i in range(numCourses):
            if not dfs(i):
                return False
        return True
