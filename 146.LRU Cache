class LRUCache:

    def __init__(self, capacity: int):
        self.capacity=capacity
        self.dict={}

    def get(self, key: int) -> int:
        if key in self.dict.keys():
            val=self.dict[key]
            del self.dict[key]
            self.dict[key]=val
            return val
        else:
            return -1
    def put(self, key: int, value: int) -> None:
        if key not in self.dict.keys():
            if self.capacity<=len(self.dict):
                del self.dict[list(self.dict)[0]]
                self.dict[key]=value
            else:
                 self.dict[key]=value
        else:
            del self.dict[key]
            self.dict[key]=value


# Your LRUCache object will be instantiated and called as such:
# obj = LRUCache(capacity)
# param_1 = obj.get(key)
# obj.put(key,value)
